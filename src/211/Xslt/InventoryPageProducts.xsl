<?xml version="1.0"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">	<xsl:import href="../../Common/Xslt/GenericProduct/GenericProductDisplay.xsl"/>	<xsl:output method="html"/>	<xsl:template match="/" name="InventoryPageProducts">		<xsl:if test="ExpressLane/Inventory/ArrayOfGenericProduct/GenericProduct">			<div class="CategoryHeader">				<h3>					<xsl:choose>						<xsl:when test="ExpressLane/Inventory/GenericCategory">							<xsl:value-of select="ExpressLane/Inventory/GenericCategory/CategoryName"/>						</xsl:when>						<xsl:otherwise>							<xsl:value-of select="ExpressLane/Inventory/Settings/TopNText"/>						</xsl:otherwise>					</xsl:choose>				</h3>			</div>			<div>				<xsl:if test="ExpressLane/Inventory/GenericCategory/CategoryID">					<xsl:if test="ExpressLane/Inventory/Settings/DisplayMostPopular = 'True'">						<a>							<xsl:attribute name="href">javascript:DisplayMostPopular();</xsl:attribute>Display<xsl:value-of select="concat(' ', ExpressLane/Inventory/Settings/TopNText)"/>						</a>					</xsl:if>				</xsl:if>				<xsl:call-template name="GiantProductsV2">					<xsl:with-param name="GenericProducts" select="//Inventory/ArrayOfGenericProduct/GenericProduct"></xsl:with-param>					<xsl:with-param name="GenericBrands" select="//Inventory/ArrayOfGenericBrand/GenericBrand"></xsl:with-param>				</xsl:call-template>			</div>		</xsl:if>		<div id="productdescription"></div>	</xsl:template>	<xsl:template name="GiantProductsV2">		<xsl:param name="GenericProducts"/>		<xsl:param name="GenericBrands"/>		<xsl:call-template name="GenericProductSortSelect">			<xsl:with-param name="GenericBrands" select="$GenericBrands"/>		</xsl:call-template>		<table>			<xsl:attribute name="id"><xsl:value-of select="concat('Product', generate-id())" /></xsl:attribute>			<xsl:attribute name="class">ProductDisplay sort</xsl:attribute>			<tbody>				<xsl:if test="position()=1">					<tr class="HeaderRow">						<th scope="col" style="background:none;">						</th>						<th scope="col" style="background:none;">						</th>						<th align="center" scope="col" style="background:none;">						</th>						<th scope="col" style="background:none;">							<img src="/Assets/123/Images/BonusCardSmallIcon.gif" border="0" style="float:left;margin-right:4px;"/>						</th>						<th scope="col" style="background:none;">						</th>					</tr>				</xsl:if>				<tr class="HeaderRow">					<th scope="col" class="header1"></th>					<th scope="col" class="header2"></th>					<th scope="col" class="header3">Item</th>					<th scope="col" class="header4">Price</th>					<th scope="col" class="header5"></th>				</tr>				<xsl:for-each select="$GenericProducts[BrandName != '']">					<xsl:sort data-type="text" select="BrandName" order="ascending"/>					<xsl:call-template name="GenericProduct_DataRow"/>				</xsl:for-each>				<xsl:for-each select="$GenericProducts[string-length(BrandName) &lt; 1]">					<xsl:call-template name="GenericProduct_DataRow"/>				</xsl:for-each>			</tbody>		</table>	</xsl:template>	<xsl:template name="GiantProductsV1" match="Inventory">		<table class="GridItem">			<xsl:if test="position()=1">				<xsl:attribute name="style">background:none; margin-top:-29px;</xsl:attribute>			</xsl:if>			<tbody>				<xsl:if test="position()=1">					<tr>						<th scope="col" style="background:none;">						</th>						<th scope="col" style="background:none;">						</th>						<th align="center" scope="col" style="background:none;">						</th>						<th scope="col" style="background:none;">							<img src="/Assets/123/Images/BonusCardSmallIcon.gif" border="0" style="float:left;margin-right:4px;"/>						</th>						<th scope="col" style="background:none;">						</th>					</tr>				</xsl:if>				<tr>					<th scope="col">					</th>					<th scope="col">Item</th>					<th scope="col">Price</th>					<th scope="col">Savings</th>					<th scope="col"></th>				</tr>				<xsl:for-each select="ExpressLane/Inventory/ArrayOfGenericProduct/GenericProduct">					<tr>						<xsl:attribute name="class">							<xsl:choose>								<xsl:when test="position() mod 2 = 1">GridAlternatingItem</xsl:when>								<xsl:otherwise>GridItem</xsl:otherwise>							</xsl:choose>						</xsl:attribute>						<td class="AddButton">							<a class="button">								<xsl:attribute name="href">javascript:AddToShoppingList(<xsl:value-of select="ProductID"/>, 3);</xsl:attribute>								<span>Buy</span>							</a>						</td>						<td class="ItemName">							<xsl:if test="BrandName">								<b>									<xsl:value-of select="concat(BrandName, ' ')"/>								</b>							</xsl:if>							<xsl:value-of select="Description"/>						</td>						<td class="ItemPrice">							<xsl:value-of select="SalePriceString"/>						</td>						<td class="ItemSavings">							<xsl:value-of select="Savings"/>						</td>						<td class="ItemSavings">							<xsl:value-of select="IconsHTML" disable-output-escaping="yes"/>						</td>					</tr>				</xsl:for-each>			</tbody>		</table>	</xsl:template></xsl:stylesheet>